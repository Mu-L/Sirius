# Docker Compose Configuration for Staging Environment
# Use with: docker compose -f docker-compose.yaml -f docker-compose.staging.yaml --env-file environments/.env.staging up -d

version: "3.8"

services:
  sirius-ui:
    image: ${IMAGE_REGISTRY:-ghcr.io/siriusscan}/sirius-ui:${IMAGE_TAG:-latest}
    build: null # Disable build, use pre-built images
    volumes: [] # Remove development volume mounts
    environment:
      - NODE_ENV=staging
      - SKIP_ENV_VALIDATION=0 # Enable validation in staging
      - SIRIUS_API_URL=${SIRIUS_API_URL}
      - NEXT_PUBLIC_SIRIUS_API_URL=${NEXT_PUBLIC_SIRIUS_API_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    restart: unless-stopped

  sirius-api:
    image: ${IMAGE_REGISTRY:-ghcr.io/siriusscan}/sirius-api:${IMAGE_TAG:-latest}
    build: null # Disable build, use pre-built images
    volumes: [] # Remove development volume mounts
    environment:
      - GO_ENV=staging
      - API_PORT=${API_PORT:-9001}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - VALKEY_HOST=${VALKEY_HOST}
      - VALKEY_PORT=${VALKEY_PORT}
      - RABBITMQ_URL=${RABBITMQ_URL}
      - LOG_LEVEL=${LOG_LEVEL:-debug} # More verbose logging for staging
      - LOG_FORMAT=${LOG_FORMAT:-json}
    restart: unless-stopped

  sirius-engine:
    image: ${IMAGE_REGISTRY:-ghcr.io/siriusscan}/sirius-engine:${IMAGE_TAG:-latest}
    build: null # Disable build, use pre-built images
    volumes: [] # Remove development volume mounts
    environment:
      - GO_ENV=staging
      - ENGINE_MAIN_PORT=${ENGINE_MAIN_PORT:-5174}
      - GRPC_AGENT_PORT=${GRPC_AGENT_PORT:-50051}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - VALKEY_HOST=${VALKEY_HOST}
      - VALKEY_PORT=${VALKEY_PORT}
      - RABBITMQ_URL=${RABBITMQ_URL}
      - LOG_LEVEL=${LOG_LEVEL:-debug} # More verbose logging for staging
      - LOG_FORMAT=${LOG_FORMAT:-json}
    restart: unless-stopped

  sirius-postgres:
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data_staging:/var/lib/postgresql/data
    restart: unless-stopped

  sirius-valkey:
    restart: unless-stopped
    volumes:
      - valkey_data_staging:/data

  sirius-rabbitmq:
    restart: unless-stopped
    volumes:
      - rabbitmq_data_staging:/var/lib/rabbitmq
    # Enable management UI for staging debugging
    ports:
      - "${RABBITMQ_MANAGEMENT_PORT:-15672}:15672"

volumes:
  postgres_data_staging:
    driver: local
  valkey_data_staging:
    driver: local
  rabbitmq_data_staging:
    driver: local

networks:
  default:
    name: sirius_staging
    driver: bridge
