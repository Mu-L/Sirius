# Simplified Docker Compose Configuration for End Users
# Use with: docker compose -f docker-compose.user.yaml up -d
# This configuration removes all development complexity for a clean user experience

name: sirius

services:
  sirius-rabbitmq:
    image: rabbitmq:3.7.3-management
    restart: unless-stopped
    container_name: sirius-rabbitmq
    hostname: sirius-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 15s
      retries: 5

  sirius-postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    container_name: sirius-postgres
    hostname: sirius-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: sirius
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  sirius-valkey:
    image: valkey/valkey:latest
    restart: unless-stopped
    container_name: sirius-valkey
    hostname: sirius-valkey
    ports:
      - "6379:6379"
    volumes:
      - valkey_data:/data

  sirius-ui:
    build:
      context: ./sirius-ui/
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_CLIENTVAR: "clientvar"
    container_name: sirius-ui
    hostname: sirius-ui
    restart: unless-stopped
    image: sirius-ui
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - SKIP_ENV_VALIDATION=1
      - DATABASE_URL=postgresql://postgres:postgres@sirius-postgres:5432/sirius
      - NEXTAUTH_SECRET=change-this-secret-in-production-please
      - NEXTAUTH_URL=http://localhost:3000
      - SIRIUS_API_URL=http://sirius-api:9001
      - NEXT_PUBLIC_SIRIUS_API_URL=http://localhost:9001
    depends_on:
      sirius-postgres:
        condition: service_healthy

  sirius-api:
    build: ./sirius-api/
    container_name: sirius-api
    hostname: sirius-api
    restart: unless-stopped
    image: sirius-api
    ports:
      - "9001:9001"
    environment:
      - GO_ENV=production
      - API_PORT=9001
      - POSTGRES_HOST=sirius-postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=sirius
      - POSTGRES_PORT=5432
      - VALKEY_HOST=sirius-valkey
      - VALKEY_PORT=6379
      - RABBITMQ_URL=amqp://guest:guest@sirius-rabbitmq:5672/
    depends_on:
      sirius-postgres:
        condition: service_healthy
      sirius-rabbitmq:
        condition: service_healthy

  sirius-engine:
    build: ./sirius-engine/
    container_name: sirius-engine
    hostname: sirius-engine
    restart: unless-stopped
    image: sirius-engine
    ports:
      - "5174:5174"
      - "50051:50051"
    environment:
      - GO_ENV=production
      - ENGINE_MAIN_PORT=5174
      - GRPC_AGENT_PORT=50051
      - POSTGRES_HOST=sirius-postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=sirius
      - POSTGRES_PORT=5432
      - VALKEY_HOST=sirius-valkey
      - VALKEY_PORT=6379
      - RABBITMQ_URL=amqp://guest:guest@sirius-rabbitmq:5672/
    depends_on:
      sirius-rabbitmq:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  valkey_data:
    driver: local

networks:
  default:
    name: sirius_user
    driver: bridge 