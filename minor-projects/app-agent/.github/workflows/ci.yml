name: Go Submodule CI - app-agent

on:
  push:
    branches: [ main ] # Or your default branch
  pull_request:
    branches: [ main ] # Or your default branch

jobs:
  test-and-lint:
    name: Test & Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.20' # From go.mod
          cache: true

      # Add step to install protoc if needed for testing proto files, e.g.:
      # - name: Install protoc
      #   uses: arduino/setup-protoc@v2
      #   with:
      #     version: '25.x' # Or your desired version
      # - name: Generate Go from proto
      #   run: make proto-gen # Assuming you have a makefile target

      - name: Install Dependencies
        run: go mod download

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.55.2
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: Lint
        run: golangci-lint run ./...

      - name: Test
        run: go test -v -race ./... # This should cover tests for generated gRPC code as well

      - name: Send repository_dispatch to Sirius main repo
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.MAIN_REPO_ACCESS_TOKEN }}
          repository: SiriusScan/Sirius
          event-type: submodule-update
          client-payload: '{ "submodule": "${{ github.repository }}", "commit_sha": "${{ github.sha }}", "ref": "${{ github.ref }}" }' 